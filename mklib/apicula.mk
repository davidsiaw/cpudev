# build gowin fs using yosys

APICULA_DOCKER_PREFIX=docker run --rm -v $(PWD):/src --workdir /src
APICULA_DOCKER_IMAGE=davidsiaw/ocs
APICULA_CMD_PREFIX=$(APICULA_DOCKER_PREFIX) $(APICULA_DOCKER_IMAGE)
APICULA_FREQ := 27

YOSYS=$(APICULA_CMD_PREFIX) yosys
NEXTPNR_GOWIN=$(APICULA_CMD_PREFIX) nextpnr-gowin
GOWIN_PACK=$(APICULA_CMD_PREFIX) gowin_pack
READ_VERILOG_PARAMS:=-sv

obj/apicula_verilogfiles: $(VERILOG_FILES)
	mkdir -p obj
	rm -f $@
	for filename in $^ ; do \
	    echo "read_verilog $(READ_VERILOG_PARAMS) $$filename" >> $@ ; \
	done

obj/apicula_settings:
	mkdir -p obj
	echo "synth_gowin -json obj/apicula.json -top $(TOP)" > $@

obj/apicula.ys: obj/apicula_verilogfiles obj/apicula_settings
	mkdir -p obj
	rm -f $@
	echo "# this file is generated by the makefile" > $@
	for filename in $^ ; do \
	    cat $$filename >> $@ ; \
	done

obj/apicula.json: obj/apicula.ys
	$(YOSYS) $< | tee obj/yosys.log

obj/gowin_pnr_apicula.json: obj/apicula.json obj/args/device_name obj/args/freq_mhz obj/args/apicula_cst $(shell cat obj/args/apicula_cst)
	$(NEXTPNR_GOWIN) --json $< --write $@ --device $(shell cat obj/args/device_name) --freq $(shell cat obj/args/freq_mhz) --cst $(shell cat obj/args/apicula_cst) | tee obj/nextpnr_apicula.log

obj/apicula_pack.fs: obj/gowin_pnr_apicula.json obj/args/apicula_class
	$(GOWIN_PACK) -d $(shell cat obj/args/apicula_class) -o $@ $< | tee obj/apicula_pack.log

upload_apicula: obj/apicula_pack.fs obj/args/name
	$(OPENFPGALOADER) -b $(shell cat obj/args/name) obj/apicula_pack.fs

apicula: obj/apicula_pack.fs

.PHONY: apicula upload_apicula
